<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="PMD ruleset" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

    <!-- Basic rules -->
    <rule ref="rulesets/java/basic.xml/JumbledIncrementer"/>
    <rule ref="rulesets/java/basic.xml/ForLoopShouldBeWhileLoop"/>
    <rule ref="rulesets/java/basic.xml/OverrideBothEqualsAndHashcode"/>
    <rule ref="rulesets/java/basic.xml/DoubleCheckedLocking"/>
    <rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock"/>
    <rule ref="rulesets/java/basic.xml/UnconditionalIfStatement"/>
    <rule ref="rulesets/java/basic.xml/BooleanInstantiation"/>
    <rule ref="rulesets/java/basic.xml/CollapsibleIfStatements"/>
    <rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray"/>
    <rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
    <rule ref="rulesets/java/basic.xml/MisplacedNullCheck"/>
    <rule ref="rulesets/java/basic.xml/AvoidThreadGroup"/>
    <rule ref="rulesets/java/basic.xml/BrokenNullCheck"/>
    <rule ref="rulesets/java/basic.xml/BigIntegerInstantiation"/>
    <rule ref="rulesets/java/basic.xml/AvoidUsingOctalValues"/>
    <rule ref="rulesets/java/basic.xml/AvoidUsingHardCodedIP"/>
    <rule ref="rulesets/java/basic.xml/CheckResultSet"/>
    <rule ref="rulesets/java/basic.xml/AvoidMultipleUnaryOperators"/>
    <rule ref="rulesets/java/basic.xml/ExtendsObject"/>
    <rule ref="rulesets/java/basic.xml/CheckSkipResult"/>
    <rule ref="rulesets/java/basic.xml/AvoidBranchingStatementAsLastInLoop"/>
    <rule ref="rulesets/java/basic.xml/DontCallThreadRun"/>
    <rule ref="rulesets/java/basic.xml/DontUseFloatTypeForLoopIndices"/>

    <!-- Brace rules -->
    <rule ref="rulesets/java/braces.xml/IfStmtsMustUseBraces"/>
    <rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces"/>
    <rule ref="rulesets/java/braces.xml/IfElseStmtsMustUseBraces"/>
    <rule ref="rulesets/java/braces.xml/ForLoopsMustUseBraces"/>

    <!--  Clone implementation rules -->
    <rule ref="rulesets/java/clone.xml/ProperCloneImplementation"/>
    <rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException"/>
    <rule ref="rulesets/java/clone.xml/CloneMethodMustImplementCloneable"/>

    <!-- Code size rules -->
    <rule ref="rulesets/java/codesize.xml/NPathComplexity">
        <properties>
            <property name="minimum" value="101" />
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength">
        <properties>
            <property name="minimum" value="51" />
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessiveParameterList">
        <properties>
            <property name="minimum" value="8" />
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessiveClassLength">
        <properties>
            <property name="minimum" value="501" />
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/CyclomaticComplexity">
        <properties>
            <property name="reportLevel" value="7" />
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessivePublicCount">
        <properties>
            <property name="minimum" value="15" />
            <!-- This equals to public method count of checkstyle because of no need to have public attribute in general -->
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/TooManyFields">
        <properties>
            <property name="maxfields" value="10" />
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/NcssMethodCount">
        <properties>
            <property name="minimum" value="31" />
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/NcssTypeCount">
        <properties>
            <property name="minimum" value="351" />
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/NcssConstructorCount">
        <properties>
            <property name="minimum" value="31" />
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/TooManyMethods">
        <properties>
            <property name="maxmethods" value="40" />
        </properties>
    </rule>

    <!-- Controversial rules -->
    <rule ref="rulesets/java/controversial.xml/UnnecessaryConstructor" />
    <rule ref="rulesets/java/controversial.xml/NullAssignment" />
    <rule ref="rulesets/java/controversial.xml/AssignmentInOperand" />
    <rule ref="rulesets/java/controversial.xml/DontImportSun" />
    <rule ref="rulesets/java/controversial.xml/SuspiciousOctalEscape" />
    <rule ref="rulesets/java/controversial.xml/UnnecessaryParentheses" />
    <rule ref="rulesets/java/controversial.xml/DefaultPackage" />
    <rule ref="rulesets/java/controversial.xml/BooleanInversion" />
    <rule ref="rulesets/java/controversial.xml/AvoidUsingShortType" />
    <rule ref="rulesets/java/controversial.xml/AvoidUsingNativeCode" />
    <rule ref="rulesets/java/controversial.xml/AvoidAccessibilityAlteration" />
    <rule ref="rulesets/java/controversial.xml/DoNotCallGarbageCollectionExplicitly" />
    <rule ref="rulesets/java/controversial.xml/OneDeclarationPerLine" />

    <!-- Coupling rules -->
    <rule ref="rulesets/java/coupling.xml/CouplingBetweenObjects">
        <properties>
            <property name="threshold" value="20" />
        </properties>
    </rule>
    <rule ref="rulesets/java/coupling.xml/ExcessiveImports">
        <properties>
            <property name="minimum" value="21" />
        </properties>
    </rule>
    <rule ref="rulesets/java/coupling.xml/LooseCoupling" />

    <!-- Design rules -->
    <rule ref="rulesets/java/design.xml/SimplifyBooleanReturns" />
    <rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions" />
    <rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault" />
    <rule ref="rulesets/java/design.xml/AvoidDeeplyNestedIfStmts">
        <properties>
            <property name="problemDepth" value="5" />
        </properties>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidReassigningParameters" />
    <rule ref="rulesets/java/design.xml/SwitchDensity" />
    <rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod" />
    <rule ref="rulesets/java/design.xml/AccessorClassGeneration" />
    <rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic" />
    <rule ref="rulesets/java/design.xml/CloseResource" />
    <rule ref="rulesets/java/design.xml/NonStaticInitializer" />
    <rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt" />
    <rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement" />
    <rule ref="rulesets/java/design.xml/OptimizableToArrayCall" />
    <rule ref="rulesets/java/design.xml/BadComparison" />
    <rule ref="rulesets/java/design.xml/EqualsNull" />
    <rule ref="rulesets/java/design.xml/ConfusingTernary" />
    <rule ref="rulesets/java/design.xml/InstantiationToGetClass" />
    <rule ref="rulesets/java/design.xml/IdempotentOperations" />
    <rule ref="rulesets/java/design.xml/SimpleDateFormatNeedsLocale" />
    <rule ref="rulesets/java/design.xml/ImmutableField" />
    <rule ref="rulesets/java/design.xml/UseLocaleWithCaseConversions" />
    <rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass" />
    <rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic" />
    <rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass" />
    <rule ref="rulesets/java/design.xml/AvoidSynchronizedAtMethodLevel" />
    <rule ref="rulesets/java/design.xml/MissingBreakInSwitch" />
    <rule ref="rulesets/java/design.xml/UseNotifyAllInsteadOfNotify" />
    <rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause" />
    <rule ref="rulesets/java/design.xml/SimplifyConditional" />
    <rule ref="rulesets/java/design.xml/CompareObjectsWithEquals" />
    <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons" />
    <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn" />
    <rule ref="rulesets/java/design.xml/NonThreadSafeSingleton" />
    <rule ref="rulesets/java/design.xml/UncommentedEmptyMethod" />
    <rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter" />
    <rule ref="rulesets/java/design.xml/PreserveStackTrace" />
    <rule ref="rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
    <rule ref="rulesets/java/design.xml/SingularField" />
    <rule ref="rulesets/java/design.xml/ReturnEmptyArrayRatherThanNull" />
    <rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod" />
    <rule ref="rulesets/java/design.xml/TooFewBranchesForASwitchStatement" />
    <rule ref="rulesets/java/design.xml/LogicInversion" />
    <rule ref="rulesets/java/design.xml/FieldDeclarationsShouldBeAtStartOfClass" />

    <!-- Empty code rules -->
    <rule ref="rulesets/java/empty.xml" />

    <!-- Finalizer rules -->
    <rule ref="rulesets/java/finalizers.xml"/>

    <!-- Import rules -->
    <rule ref="rulesets/java/imports.xml/DuplicateImports" />
    <rule ref="rulesets/java/imports.xml/DontImportJavaLang" />
    <rule ref="rulesets/java/imports.xml/UnusedImports" />
    <rule ref="rulesets/java/imports.xml/ImportFromSamePackage" />
    <rule ref="rulesets/java/imports.xml/TooManyStaticImports">
        <properties>
            <property name="maximumStaticImports" value="0" />
        </properties>
    </rule>
    <rule ref="rulesets/java/imports.xml/UnnecessaryFullyQualifiedName" />

    <!-- Logging rules -->
    <rule ref="rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging" />
    <rule ref="rulesets/java/logging-jakarta-commons.xml/ProperLogger" />

    <!-- Junit rules -->
    <rule ref="rulesets/java/junit.xml/JUnitStaticSuite" />
    <rule ref="rulesets/java/junit.xml/TestClassWithoutTestCases" />
    <rule ref="rulesets/java/junit.xml/UnnecessaryBooleanAssertion" />
    <rule ref="rulesets/java/junit.xml/UseAssertEqualsInsteadOfAssertTrue" />
    <rule ref="rulesets/java/junit.xml/UseAssertSameInsteadOfAssertTrue" />
    <rule ref="rulesets/java/junit.xml/UseAssertNullInsteadOfAssertTrue" />
    <rule ref="rulesets/java/junit.xml/SimplifyBooleanAssertion" />

    <!-- Naming rules -->
    <rule ref="rulesets/java/naming.xml/LongVariable">
        <properties>
            <property name="minimum" value="40" />
        </properties>
    </rule>
    <rule ref="rulesets/java/naming.xml/MethodNamingConventions" />
    <rule ref="rulesets/java/naming.xml/ClassNamingConventions" />
    <rule ref="rulesets/java/naming.xml/AvoidDollarSigns" />
    <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass" />
    <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName" />
    <rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName" />
    <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName" />
    <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName" />
    <rule ref="rulesets/java/naming.xml/NoPackage" />
    <rule ref="rulesets/java/naming.xml/PackageCase" />
    <rule ref="rulesets/java/naming.xml/GenericsNaming" />

    <!-- Optimalization rules -->
    <rule ref="rulesets/java/optimizations.xml/LocalVariableCouldBeFinal" />
    <rule ref="rulesets/java/optimizations.xml/MethodArgumentCouldBeFinal" />
    <rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector" />
    <rule ref="rulesets/java/optimizations.xml/SimplifyStartsWith" />
    <rule ref="rulesets/java/optimizations.xml/UseStringBufferForStringAppends" />
    <rule ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation" />
    <rule ref="rulesets/java/optimizations.xml/AddEmptyString" />
    <rule ref="rulesets/java/optimizations.xml/RedundantFieldInitializer" />

    <!-- Exception related rules -->
    <rule ref="rulesets/java/strictexception.xml" />

    <!-- String rules -->
    <rule ref="rulesets/java/strings.xml" />

    <!-- Type resolution rules -->
    <rule ref="rulesets/java/typeresolution.xml"/>

    <!-- Unnecessary code rules -->
    <rule ref="rulesets/java/unnecessary.xml"/>

    <!--  Rules of unused code -->
    <rule ref="rulesets/java/unusedcode.xml"/>
</ruleset>